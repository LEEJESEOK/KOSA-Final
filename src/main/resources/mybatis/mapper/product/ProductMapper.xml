<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hyundai.kosafinal.mapper.product.ProductMapper">

  <resultMap id="ProductMap" type="ProductDTO">
    <result property="id" column="ID"/>
    <result property="size" column="SIZE"/>
    <result property="colorId" column="COLOR_ID"/>
    <result property="name" column="NAME"/>
    <result property="brand" column="BRAND"/>
    <result property="price" column="PRICE"/>
    <result property="categoryLarge" column="CATEGORY_LARGE"/>
    <result property="categoryMedium" column="CATEGORY_MEDIUM"/>
    <result property="categorySmall" column="CATEGORY_SMALL"/>
    <result property="image1Uri" column="IMAGE1_URI"/>
    <result property="image2Uri" column="IMAGE2_URI"/>
    <result property="image3Uri" column="IMAGE3_URI"/>
    <result property="colorChipUri" column="COLOR_CHIP_URI"/>
    <result property="stockAmount" column="STOCK_AMOUNT"/>
    <result property="createdAt" column="CREATED_AT"/>
    <result property="updatedAt" column="UPDATED_AT"/>
    <result property="status" column="STATUS"/>
  </resultMap>

  <select id="getColorChipByPid" resultType="String">
    SELECT p.COLOR_CHIP_URI
    FROM PRODUCT p
    where p.COLOR_CHIP_URI like '%'||#{colorId}||'%'
      and ROWNUM = 1
  </select>

  <!--상품 상세 정보-->
  <select id="getProductDetailList" resultMap="ProductMap">
    SELECT *
    FROM PRODUCT
    WHERE ID like NVL(#{id}, '%')
      AND "SIZE" like NVL(#{size}, '%')
      AND COLOR_ID like NVL(#{colorId}, '%')
      AND CATEGORY_LARGE like NVL(#{category.large}, '%')
      AND CATEGORY_MEDIUM like NVL(#{category.medium}, '%')
      AND CATEGORY_SMALL like NVL(#{category.small}, '%')
  </select>

  <!--카테고리에 해당하는 제품 목록-->
  <select id="selectProductListByCategory" resultMap="ProductMap">
    SELECT *
    FROM sf_display_product_list_by_category(#{large}, #{medium}, #{small})
  </select>

  <!--필터에 해당하는 제품 목록, 페이징 적용-->
  <select id="selectFilteredProductListWithPaging" resultMap="ProductMap">
    select *
    from (select ROWNUM rn, p.*
          from SF_DISPLAY_FILTERED_PRODUCT_LIST(#{id}, #{size}, #{colorId},
                                                #{category.large}, #{category.medium},
                                                #{category.small},
                                                #{brand}, #{minPrice}, #{maxPrice}, #{sortType}) p)
    where rn between ((#{criteria.pageNum} - 1) * #{criteria.amount} + 1) and (#{criteria.pageNum} * #{criteria.amount})
  </select>

  <!--필터에 해당하는 제품의 색상 목록-->
  <select id="selectFilteredColorListWithPaging" resultType="ColorDTO">
    SELECt ID                                                 productId,
           COLOR_ID                                           id,
           (select COLOR_NAME FROM COLOR WHERE ID = COLOR_ID) colorName,
           COLOR_CHIP_URI                                     colorChipUri
    FROM VIEW_PRODUCT_LIST_COLOR_NO_DUPLICATES
    WHERE ID IN (select ID
                 from (select ROWNUM rn, p.*
                       from SF_DISPLAY_FILTERED_PRODUCT_LIST(#{id}, #{size}, #{colorId},
                                                             #{category.large}, #{category.medium},
                                                             #{category.small},
                                                             #{brand}, #{minPrice}, #{maxPrice},
                                                             #{sortType}) p)
    )
  </select>

  <!--필터에 해당하는 제품의 사이즈 목록-->
  <select id="selectFilteredSizeListWithPaging" resultType="SizeDTO">
    SELECt ID     productId,
           "SIZE" "size"
    FROM VIEW_PRODUCT_LIST_SIZE_NO_DUPLICATES
    WHERE ID IN (select ID
                 from (select ROWNUM rn
                            , p.*
                       from SF_DISPLAY_FILTERED_PRODUCT_LIST(#{id}, #{size}, #{colorId}
                              , #{category.large}, #{category.medium}, #{category.small}
                              , #{brand}, #{minPrice}, #{maxPrice}
                              , #{sortType}) p)
    )
  </select>

  <select id="searchProductCount" resultType="int">
    <![CDATA[
            SELECT count(*)
            FROM PRODUCT
        ]]>
    <where>
      <if test="keyType == 'id'.toString() and keyContent != null"> AND ID = #{keyContent}</if>
      <if test="keyType != 'id'.toString() and keyContent != null"> AND NAME like '%'||#{keyContent}||'%'</if>
      <if test="categoryLarge != null"> AND CATEGORY_LARGE = #{categoryLarge}</if>
      <if test="categoryMedium != null"> AND CATEGORY_MEDIUM = #{categoryMedium}</if>
      <if test="categorySmall != null"> AND CATEGORY_SMALL = #{categorySmall}</if>
      <if test="brand != null"> AND BRAND like '%'||#{brand}||'%'</if>
    </where>
  </select>

  <!-- 삼품 검색 로직 -->
  <select id="selectProductListBySearch" resultType="ProductDTO">
    SELECT *
    FROM (
      SELECT
          ROWNUM as rn,
          id,
          "SIZE",
          color_id,
          name,
          brand,
          category_large,
          category_medium,
          category_small,
          detail,
          price,
          image1_uri,
          image2_uri,
          image3_uri,
          color_chip_uri,
          stock_amount,
          created_at,
          updated_at,
          status
      FROM (select * from PRODUCT ORDER BY CREATED_AT DESC)
      <where>
        <if test="keyType == 'id'.toString() and keyContent != null"> AND ID = #{keyContent}</if>
        <if test="keyType != 'id'.toString() and keyContent != null"> AND NAME like '%'||#{keyContent}||'%'</if>
        <if test="categoryLarge != null"> AND CATEGORY_LARGE = #{categoryLarge}</if>
        <if test="categoryMedium != null"> AND CATEGORY_MEDIUM = #{categoryMedium}</if>
        <if test="categorySmall != null"> AND CATEGORY_SMALL = #{categorySmall}</if>
        <if test="brand != null"> AND BRAND like '%'||#{brand}||'%'</if>
        <if test="status != null"> AND STATUS = #{status}</if>
      </where>
    <![CDATA[
          )
          WHERE rn BETWEEN ((#{pageNum} - 1) * #{amount} + 1) AND (#{pageNum} * #{amount})
    ]]>
  </select>

  <select id="selectProductDetailById" resultType="com.hyundai.kosafinal.domain.ProductDTO">
        <![CDATA[
    SELECT *
    FROM TABLE(SF_PRODUCT_BY_ID(#{productId}))
    ]]>
    </select>

  <select id="selectCategory" resultType="com.hyundai.kosafinal.domain.CategoryDTO">
    SELECT large, medium, small
    FROM CATEGORY
    ORDER BY LARGE, MEDIUM, SMALL
  </select>

  <!--전체 제품 수-->
  <select id="getTotalCount" resultType="int">
    SELECT COUNT(*)
    FROM VIEW_PRODUCT_LIST_ID_NO_DUPLICATES
  </select>

  <!--카테고리에 해당하는 제품 수-->
  <select id="getCategoryCount" resultType="int">
    SELECT COUNT(*)
    FROM sf_display_product_list_by_category(#{large}, #{medium}, #{small})
  </select>

  <!--필터에 해당하는 제품 수-->
  <select id="getFilteredProductListCount" resultType="int">
    select COUNT(*)
    from (select ROWNUM rn, p.*
          from SF_DISPLAY_FILTERED_PRODUCT_LIST(#{id}, #{size}, #{colorId},
                                                #{category.large}, #{category.medium},
                                                #{category.small},
                                                #{brand}, #{minPrice}, #{maxPrice}, 0) p)
  </select>

  <select id="selectProductByIdAndColor" resultType="ProductDTO">
    select *
    FROM PRODUCT
    where id = #{productId}
    <if test='color != null || color != ""'>
      and
      color_id = #{color}
    </if>
  </select>

  <select id="selectColors" resultType="ProductDTO">
    SELECT *
    FROM view_product_list_color_no_duplicates
    WHERE id = #{productId}
  </select>

  <select id="selectSize" resultType="ProductDTO">
    SELECT *
    from view_product_list_size_no_duplicates
    where id = #{productId}
  </select>

  <update id="updateProduct" parameterType="ProductDTO">
    UPDATE PRODUCT SET
      BRAND = #{brand}, DETAIL = #{detail},
      IMAGE1_URI = #{image1Uri}, IMAGE2_URI = #{image2Uri}, IMAGE3_URI = #{image3Uri},
      STOCK_AMOUNT = #{stockAmount}, PRICE = #{price}, UPDATED_AT = SYSDATE
    WHERE ID = #{id} AND "SIZE" = #{size} AND COLOR_ID = #{colorId} AND CATEGORY_LARGE = #{categoryLarge}
        AND CATEGORY_MEDIUM = #{categoryMedium} AND CATEGORY_SMALL = #{categorySmall}
  </update>

  <insert id="insertProduct" parameterType="ProductDTO" statementType="CALLABLE">
      <![CDATA[
    {call SP_PRODUCT_INSERT(
      #{id},
      #{size},
      #{colorId},
      #{name},
      #{brand},
      #{categoryLarge},
      #{categoryMedium},
      #{categorySmall},
      #{detail},
      #{price},
      #{image1Uri},
      #{image2Uri},
      #{image3Uri},
      #{colorChipUri},
      #{stockAmount},
      SYSDATE,
      SYSDATE)
      }
    ]]>
    </insert>

    <select id="selectSaleProduct" resultType="SaleDTO">
        SELECT * FROM sale
        WHERE sysdate BETWEEN start_date AND end_date
    </select>

    <select id="selectLimitedProduct" resultType="LimitedProductDTO">
        <![CDATA[
            SELECT * FROM limited_product
            WHERE rownum < 10
        ]]>
    </select>

</mapper>
