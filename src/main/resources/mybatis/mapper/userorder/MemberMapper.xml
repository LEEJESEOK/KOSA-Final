<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.kosafinal.mapper.userorder.MemberMapper">

    <resultMap id="MemberMap" type="Member2DTO">
        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="name" column="NAME"/>
        <result property="gender" column="GENDER"/>
        <result property="birth" column="BIRTH"/>
        <result property="tel" column="TEL"/>
        <result property="address1" column="ADDRESS1"/>
        <result property="address2" column="ADDRESS2"/>
        <result property="zipcode" column="ZIPCODE"/>
        <result property="height" column="HEIGHT"/>
        <result property="weight" column="WEIGHT"/>
        <result property="gradeId" column="GRADE_ID"/>
        <result property="point" column="POINT"/>
        <result property="status" column="STATUS"/>
        <result property="login_type" column="LOGIN_TYPE"/>
        <result property="role_set" column="ROLE_SET"/>
        <result property="recentLoginDate" column="RECENT_LOGIN_DATE"/>
        <result property="signUpDate" column="SIGN_UP_DATE"/>
    </resultMap>

    <select id="findGrade" resultType="String">
        select grade_id
        from member
        where email=#{email}
    </select>

    <select id="findByEmail2" resultType ="VipDTO">
        select EMAIL,NAME,PERIOD,CNT_1,FLAG
        FROM MEMBER
        WHERE EMAIL=#{email}
    </select>
    <select id="findByEmail" resultMap="MemberMap">
        select EMAIL,
               PASSWORD,
               NAME,
               GENDER,
               BIRTH,
               TEL,
               ADDRESS1,
               ADDRESS2,
               ZIPCODE,
               HEIGHT,
               WEIGHT,
               POINT,
               STATUS,
               GRADE_ID,
               LOGIN_TYPE,
               ROLE_SET,
               RECENT_LOGIN_DATE,
               SIGN_UP_DATE

        from member c1
                 join role_set c2
                      on c1.email = c2.user_email
        where c1.email = #{email}

    </select>
    <insert id="insertMember">

        {call sp_member_insert(#{email}, #{password}, #{name}, #{gender,jdbcType=NUMERIC}, #{birth, jdbcType=DATE}, #{tel, jdbcType=VARCHAR}, #{address1, jdbcType=VARCHAR}, #{address2, jdbcType=VARCHAR},
                               #{zipcode,jdbcType=NUMERIC}, #{height, jdbcType=NUMERIC}, #{weight, jdbcType=NUMERIC}, #{point,jdbcType=NUMERIC}, #{login_type})}

    </insert>

    <insert id="insertRoleSet">
        {call sp_member_insert_role_set(#{role_set}, #{user_email})}
    </insert>

    <delete id="deleteRoleSet">
        update ROLE_SET
        set role_set='MANAGER'
        where user_email=#{user_email}

    </delete>

    <select id="checkId" resultType="int">
        select sf_check_id(#{email})
        from dual
    </select>

    <select id="checkPW" resultType="String">
        select sf_check_pw(#{email} )
        from dual
    </select>
    <update id="updateMember">
        update member
        set
            password=#{password},
            name=#{name},
            gender=#{gender},
            birth=#{birth},
            tel=#{tel},
            address1=#{address1},
            address2=#{address2},
            height=#{height},
            weight=#{weight}
        where email=#{email}
    </update>

    <delete id="deleteMember">
        {call sp_member_delete(#{email)})}
    </delete>

    <insert id="insertGrade">
        insert into GRADE(id, name, min, max)
        values (#{id}, #{name}, #{min}, #{max})

    </insert>

    <!-- 백오피스 관련 회원 검색 결과 수 -->
    <select id="searchMemberCount" resultType="int">
        <![CDATA[
            SELECT count(*)
            FROM member
        ]]>
            <where>
                <!-- 검색어 필터링 -->
                <if test="keyword != null">
                    <if test="type=='id'.toString()">
                        UPPER(email) LIKE '%'||UPPER(#{keyword})||'%'
                    </if>
                    <if test="type=='name'.toString()">
                        UPPER(name) LIKE '%'||UPPER(#{keyword})||'%'
                    </if>
                    <if test="type=='tel'.toString()">
                        tel LIKE '%'||#{keyword}||'%'
                    </if>
                </if>
                <!-- 날짜 필터링 -->
                <trim prefix = "and">
                    <if test="start_date != null and end_date != null">
                        <![CDATA[
                                    TO_CHAR(sign_up_date, 'YYYYMMDD') >= TO_CHAR(#{start_date}, 'YYYYMMDD') AND TO_CHAR(sign_up_date, 'YYYYMMDD') <= TO_CHAR(#{end_date}, 'YYYYMMDD')
                                ]]>
                    </if>
                </trim>
                <!-- 활동상태 필터링 -->
                <trim prefix = "and">
                    <if test="selected != -1">
                        status = #{selected}
                    </if>
                </trim>
            </where>
    </select>

    <!-- 백오피스 관련 회원 검색 결과, 페이징 적용 -->
    <select id="searchMember" resultType="MemberDTO">
        <![CDATA[
            SELECT *
            FROM (
                SELECT rownum as rn, email, name, gender, birth, tel, address1, address2, zipcode,
                       height, weight, point, recent_login_date, sign_up_date, status, grade_id, login_type
                FROM (SELECT * FROM member ORDER BY sign_up_date DESC)
        ]]>
                <where>
                    <!-- 검색어 필터링 -->
                    <if test="keyword != null">
                        <if test="type=='id'.toString()">
                            UPPER(email) LIKE '%'||UPPER(#{keyword})||'%'
                        </if>
                        <if test="type=='name'.toString()">
                            UPPER(name) LIKE '%'||UPPER(#{keyword})||'%'
                        </if>
                        <if test="type=='tel'.toString()">
                            tel LIKE '%'||#{keyword}||'%'
                        </if>
                    </if>
                    <!-- 날짜 필터링 -->
                    <trim prefix = "and">
                        <if test="start_date != null and end_date != null">
                            <![CDATA[
                                TO_CHAR(sign_up_date, 'YYYYMMDD') >= TO_CHAR(#{start_date}, 'YYYYMMDD') AND TO_CHAR(sign_up_date, 'YYYYMMDD') <= TO_CHAR(#{end_date}, 'YYYYMMDD')
                            ]]>
                        </if>
                    </trim>
                    <!-- 활동상태 필터링 -->
                    <trim prefix = "and">
                        <if test="selected != -1">
                            status = #{selected}
                        </if>
                    </trim>
                </where>
        <![CDATA[
            )
            WHERE rn BETWEEN ((#{pageNum} - 1) * #{amount} + 1) AND (#{pageNum} * #{amount})
        ]]>
    </select>

    <!-- 백오피스 관련 VIP, VVIP 검색 수 -->
    <select id="searchVIPCount" resultType="MemberDTO">
        SELECT COUNT(*)
        FROM member
        <where>
            <!-- 검색어 필터링 -->
            <if test="keyword != null">
                <if test="type=='id'.toString()">
                    UPPER(email) LIKE '%'||UPPER(#{keyword})||'%'
                </if>
                <if test="type=='name'.toString()">
                    UPPER(name) LIKE '%'||UPPER(#{keyword})||'%'
                </if>
                <if test="type=='tel'.toString()">
                    tel LIKE '%'||#{keyword}||'%'
                </if>
            </if>
            <!-- 날짜 필터링 -->
            <trim prefix = "and">
                <if test="start_date != null and end_date != null">
                    <![CDATA[
                                    TO_CHAR(sign_up_date, 'YYYYMMDD') >= TO_CHAR(#{start_date}, 'YYYYMMDD') AND TO_CHAR(sign_up_date, 'YYYYMMDD') <= TO_CHAR(#{end_date}, 'YYYYMMDD')
                                ]]>
                </if>
            </trim>
            <!-- 등급 필터링 -->
            <trim prefix = "and">
                <if test="selected == -1">
                    grade IN (4,5)
                </if>
                <if test="selected != -1">
                    grade = #{selected}
                </if>
            </trim>
        </where>
    </select>

    <!-- 백오피스 관련 VIP, VVIP 회원 전부 조회, 페이징 적용 -->
    <select id="searchVIP" resultType="MemberDTO">
        SELECT *
        FROM (
            SELECT rownum as rn, email, name, gender, birth, tel, address1, address2, zipcode,
                   height, weight, point, recent_login_date, sign_up_date, status, grade_id, login_type
            FROM member
            <where>
                <!-- 검색어 필터링 -->
                <if test="keyword != null">
                    <if test="type=='id'.toString()">
                        UPPER(email) LIKE '%'||UPPER(#{keyword})||'%'
                    </if>
                    <if test="type=='name'.toString()">
                        UPPER(name) LIKE '%'||UPPER(#{keyword})||'%'
                    </if>
                    <if test="type=='tel'.toString()">
                        tel LIKE '%'||#{keyword}||'%'
                    </if>
                </if>
                <!-- 날짜 필터링 -->
                <trim prefix = "and">
                    <if test="start_date != null and end_date != null">
                        <![CDATA[
                                    TO_CHAR(sign_up_date, 'YYYYMMDD') >= TO_CHAR(#{start_date}, 'YYYYMMDD') AND TO_CHAR(sign_up_date, 'YYYYMMDD') <= TO_CHAR(#{end_date}, 'YYYYMMDD')
                                ]]>
                    </if>
                </trim>
                <!-- 등급 필터링 -->
                <trim prefix = "and">
                    <if test="selected == -1">
                        grade IN (4,5)
                    </if>
                    <if test="selected != -1">
                        grade = #{selected}
                    </if>
                </trim>
            </where>
        <![CDATA[
            )
            WHERE rn BETWEEN ((#{pageNum} - 1) * #{amount} + 1) AND (#{pageNum} * #{amount})
        ]]>
    </select>

    <insert id="insertLog" parameterType="String">
        insert into LOGIN_LOG(LOG_ID,CUSTOMER_ID,LOGIN_DATE) values(sq_log.nextval, #{customer_id}, sysdate)

    </insert>
</mapper>